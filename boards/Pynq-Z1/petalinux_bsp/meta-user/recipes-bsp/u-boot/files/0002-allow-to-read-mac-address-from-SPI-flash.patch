From bba34edd239ad5b4878f3bfc7da1e57205705599 Mon Sep 17 00:00:00 2001
From: Rock Qu <yunq@xilinx.com>
Date: Mon, 22 Jun 2020 18:29:59 -0700
Subject: [PATCH 2/4] allow to read mac address from SPI flash

---
 board/xilinx/common/board.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/board/xilinx/common/board.c b/board/xilinx/common/board.c
index 5fdd994..f78b68e 100644
--- a/board/xilinx/common/board.c
+++ b/board/xilinx/common/board.c
@@ -8,6 +8,8 @@
 #include <asm/sections.h>
 #include <dm/uclass.h>
 #include <i2c.h>
+#include <spi.h>
+#include <spi_flash.h>
 #include "board.h"
 
 int zynq_board_read_rom_ethaddr(unsigned char *ethaddr)
@@ -36,6 +38,29 @@ int zynq_board_read_rom_ethaddr(unsigned char *ethaddr)
 		debug("%s: I2C EEPROM MAC %pM\n", __func__, ethaddr);
 #endif
 
+#if defined(CONFIG_ZYNQ_QSPI) && defined(CONFIG_ZYNQ_GEM_SPI_MAC_OFFSET)
+#define CMD_OTPREAD_ARRAY_FAST		0x4b
+	struct spi_flash *flash;
+	flash = spi_flash_probe(CONFIG_SF_DEFAULT_BUS,
+				CONFIG_SF_DEFAULT_CS,
+				CONFIG_SF_DEFAULT_SPEED,
+				CONFIG_SF_DEFAULT_MODE);
+	if (!flash) {
+		printf("SPI(bus:%u cs:%u) probe failed\n",
+			CONFIG_SF_DEFAULT_BUS,
+			CONFIG_SF_DEFAULT_CS);
+		return -ENODEV;
+	}
+	ret = spi_flash_read(flash, CONFIG_ZYNQ_GEM_SPI_MAC_OFFSET, 6, ethaddr);
+	if (ret)
+		debug("%s: SPI EEPROM MAC address read failed\n", __func__);
+	else
+		debug("%s: SPI EEPROM MAC %pM\n", __func__, ethaddr);
+
+	if (flash)
+		spi_flash_free(flash);
+#endif
+
 	return ret;
 }
 
-- 
1.8.3.1

